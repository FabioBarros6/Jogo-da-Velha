<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/v7+AP7+/gH+/v4B/v7+AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v4A/v7+AP7+/gT+/v4C/v7+AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7+/hL+/v4Q/v7+EP7+/hD+/v4U/v7+Gv7+
        /hb+/v4Q/v7+FP7+/hH+/v4L/v7+Bv7+/gr+/v4M/v7+E/7+/hL+/v4Q/v7+H/7+/iL+/v4V/v7+Cf7+
        /gz+/v4U/v7+Ev7+/g3+/v4G/v7+Ff7+/gv+/v4J/v7+Bf7+/gT+/v4O/v7+G/7+/ib+/v4k/v7+JP7+
        /h7+/v4k/v7+Hv7+/iL+/v4u/v7+Jv7+/hX+/v4U/v7+J/7+/ij+/v4r/v7+Kv7+/iX+/v4i/v7+Mf7+
        /i3+/v4j/v7+Kf7+/iv+/v4n/v7+Gv7+/g7+/v4s/v7+J/7+/iP+/v4N/v7+Df7+/h3+/v4h/v7+Cv7+
        /hD+/v4Q/v7+A/7+/gn+/v4O/v7+GP7+/gj+/v4M/v7+BP7+/g7+/v4R/v7+EP7+/gv+/v4T/v7+Ev7+
        /gr+/v4J/v7+C/7+/gz+/v4R/v7+DP7+/gv+/v4G/v7+Af7+/gv+/v4M/v7+DP7+/gL+/v4U/v7+Hv7+
        /gf+/v4B/v7+Af7+/gH+/v4A/v7+AP7+/gD+/v4A/v7+HP7+/jr+/v45/v7+HP7+/h/+/v4e/v7+Gv7+
        /iP+/v4b/v7+Av7+/hz+/v4W/v7+Jf7+/hz+/v4G/v7+AAAAAAAAAAAAAAAAAAAAAAD+/v4A/v7+AP7+
        /gb+/v4HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/v7+AP7+/gT+/v4n/v7+Dv7+/g7+/v4//v7+GP7+
        /hD+/v5A/v7+D/7+/gr+/v4G/v7+QP7+/gv+/v4O/v7+P/7+/gz+/v4AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD+/v4A/v7+AP7+/gH+/v4A/v7+AP7+
        /jn+/v4X/v7+Bf7+/kD+/v4D/v7+AP7+/gf+/v5A/v7+A/7+/gH+/v4//v7+DP7+/gAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/v7+AP7+
        /gH+/v4k/v7+Rf7+/gX+/v4G/v7+QP7+/gP+/v4A/v7+B/7+/kD+/v4D/v7+Af7+/j/+/v4M/v7+AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP7+
        /gD+/v4I/v7+Pf7+/kH+/v4M/v7+AP7+/gf+/v5A/v7+A/7+/gD+/v4H/v7+QP7+/gP+/v4B/v7+P/7+
        /gz+/v4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/v7+AP7+/jX+/v4u/v7+Af7+/gD+/v4A/v7+B/7+/kD+/v4D/v7+AP7+/gf+/v5A/v7+A/7+
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5L1QAOS9UADkvVAF5L1QI+S9UD3kvVA85L1QPOS9UDzkvVA95L1QJeS9UAbkvVAA5L1QAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAOS9UADkvVAA5L1QCOS9UCnkvVA/5L1QK+S9UAnkvVAA5L1QAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkvVAA5L1QAOS9UAPkvVAA5L1QAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////+f+f/wAAAAAAAAAAAAAAAA8AAfz+AAH//2CB//+A
        gf//CIH//xiB//wIAH/8CQB//AfAf/wDgH/8A4B//AOAf/wBAH/8AAB//AAAf/wAAH/8AAB//gAA//+A
        A///4A////g////+//////////////////8=
</value>
  </data>
</root>